{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KRISHNA KUMAR\\\\OneDrive\\\\Desktop\\\\movie-Library\\\\frontend\\\\src\\\\components\\\\MovieSearch.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieSearch = () => {\n  _s();\n  const [query, setQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  const handleSearch = async () => {\n    try {\n      const response = await axios.get(`http://localhost:5000/api/omdb/search?query=${query}`);\n      setSearchResults(response.data);\n    } catch (error) {\n      setErrorMessage('Error searching for movies. Please try again later.');\n    }\n  };\n  const handleAddToList = async imdbID => {\n    try {\n      await axios.post('http://localhost:5000/api/movielists/add', {\n        imdbID\n      });\n      alert('Movie added to your list!');\n    } catch (error) {\n      alert('Failed to add movie to your list. Please try again later.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search for a movie\",\n      value: query,\n      onChange: e => setQuery(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: searchResults.map(movie => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [movie.Title, \" (\", movie.Year, \")\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAddToList(movie.imdbID),\n          children: \"Add to List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)]\n      }, movie.imdbID, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieSearch, \"06Uk6ihaGL4Gt1OBQmob5zFSch8=\");\n_c = MovieSearch;\nexport default MovieSearch;\nvar _c;\n$RefreshReg$(_c, \"MovieSearch\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","MovieSearch","_s","query","setQuery","searchResults","setSearchResults","errorMessage","setErrorMessage","handleSearch","response","get","data","error","handleAddToList","imdbID","post","alert","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","movie","Title","Year","_c","$RefreshReg$"],"sources":["C:/Users/KRISHNA KUMAR/OneDrive/Desktop/movie-Library/frontend/src/components/MovieSearch.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst MovieSearch = () => {\r\n  const [query, setQuery] = useState('');\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const handleSearch = async () => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/api/omdb/search?query=${query}`);\r\n      setSearchResults(response.data);\r\n    } catch (error) {\r\n      setErrorMessage('Error searching for movies. Please try again later.');\r\n    }\r\n  };\r\n\r\n  const handleAddToList = async (imdbID) => {\r\n    try {\r\n      await axios.post('http://localhost:5000/api/movielists/add', { imdbID });\r\n      alert('Movie added to your list!');\r\n    } catch (error) {\r\n      alert('Failed to add movie to your list. Please try again later.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search for a movie\"\r\n        value={query}\r\n        onChange={(e) => setQuery(e.target.value)}\r\n      />\r\n      <button onClick={handleSearch}>Search</button>\r\n\r\n      {errorMessage && <p>{errorMessage}</p>}\r\n\r\n      <ul>\r\n        {searchResults.map((movie) => (\r\n          <li key={movie.imdbID}>\r\n            {movie.Title} ({movie.Year})\r\n            <button onClick={() => handleAddToList(movie.imdbID)}>Add to List</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieSearch;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMY,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,+CAA+CR,KAAK,EAAE,CAAC;MACxFG,gBAAgB,CAACI,QAAQ,CAACE,IAAI,CAAC;IACjC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdL,eAAe,CAAC,qDAAqD,CAAC;IACxE;EACF,CAAC;EAED,MAAMM,eAAe,GAAG,MAAOC,MAAM,IAAK;IACxC,IAAI;MACF,MAAMjB,KAAK,CAACkB,IAAI,CAAC,0CAA0C,EAAE;QAAED;MAAO,CAAC,CAAC;MACxEE,KAAK,CAAC,2BAA2B,CAAC;IACpC,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACdI,KAAK,CAAC,2DAA2D,CAAC;IACpE;EACF,CAAC;EAED,oBACEjB,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MACEmB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,oBAAoB;MAChCC,KAAK,EAAElB,KAAM;MACbmB,QAAQ,EAAGC,CAAC,IAAKnB,QAAQ,CAACmB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eACF5B,OAAA;MAAQ6B,OAAO,EAAEpB,YAAa;MAAAS,QAAA,EAAC;IAAM;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAE7CrB,YAAY,iBAAIP,OAAA;MAAAkB,QAAA,EAAIX;IAAY;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEtC5B,OAAA;MAAAkB,QAAA,EACGb,aAAa,CAACyB,GAAG,CAAEC,KAAK,iBACvB/B,OAAA;QAAAkB,QAAA,GACGa,KAAK,CAACC,KAAK,EAAC,IAAE,EAACD,KAAK,CAACE,IAAI,EAAC,GAC3B,eAAAjC,OAAA;UAAQ6B,OAAO,EAAEA,CAAA,KAAMf,eAAe,CAACiB,KAAK,CAAChB,MAAM,CAAE;UAAAG,QAAA,EAAC;QAAW;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAFnEG,KAAK,CAAChB,MAAM;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGjB,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAC1B,EAAA,CA7CID,WAAW;AAAAiC,EAAA,GAAXjC,WAAW;AA+CjB,eAAeA,WAAW;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}