{"ast":null,"code":"// src/pages/Home.js\nimport React,{useState,useEffect}from'react';import{searchMovies,getLists,addMovieToList}from'../services/api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Home=()=>{const[movies,setMovies]=useState([]);const[lists,setLists]=useState([]);const[selectedListId,setSelectedListId]=useState('');const[showListDropdown,setShowListDropdown]=useState(false);const[searchTerm,setSearchTerm]=useState('');const handleSubmit=e=>{e.preventDefault();handleSearch(searchTerm);};useEffect(()=>{// Function to fetch initial random movies when component mounts\nconst fetchInitialMovies=async()=>{try{// Perform a search with a random term to get random movies\nconst response=await searchMovies('random');setMovies(response.Search);setShowListDropdown(true);}catch(error){console.error('Failed to fetch initial random movies:',error);}};// Function to fetch user lists\nconst fetchLists=async()=>{try{const data=await getLists();setLists(data);}catch(error){console.error('Failed to fetch user lists:',error);}};// Call the functions to fetch initial random movies and user lists\nfetchInitialMovies();fetchLists();},[]);const handleSearch=async searchTerm=>{try{const data=await searchMovies(searchTerm);setMovies(data.Search);setShowListDropdown(true);// Show the list dropdown after search results are obtained\n}catch(error){console.error('Failed to fetch search results:',error);// Handle the error, e.g., display an error message to the user\n}};const handleAddMovie=async movie=>{if(!selectedListId){window.alert('Please select a list to add the movie to.');return;}try{await addMovieToList(selectedListId,movie);window.alert('Movie added to list successfully');}catch(error){console.error('Failed to add movie to list:',error);window.alert('Failed to add movie to list');}};return/*#__PURE__*/_jsxs(\"div\",{className:\"p-6\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"mb-6\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"flex items-center justify-center\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search for Movies or TV shows\",value:searchTerm,onChange:e=>setSearchTerm(e.target.value),className:\"bg-white-200 w-1/3 text-black-300 font-mono ring-1 ring-black-10 focus:ring-2 focus:ring-blue-400 outline-none duration-300 placeholder:text-zinc-800 placeholder:opacity-80 rounded-full px-4 py-1 shadow-md focus:shadow-lg focus:shadow-blue-200\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"ml-2 relative py-2 px-5 text-black text-base font-bold rounded-full overflow-hidden bg-zinc-400 transition-all duration-400 ease-in-out shadow-md hover:scale-105 hover:text-white hover:shadow-lg active:scale-90 before:absolute before:top-0 before:-left-full before:w-full before:h-full before:bg-gradient-to-r before:from-blue-500 before:to-blue-300 before:transition-all before:duration-500 before:ease-in-out before:z-[-1] before:rounded-full hover:before:left-0\",children:\"Search\"})]})}),movies.length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-6 p-6 \",children:movies.map(movie=>/*#__PURE__*/_jsxs(\"div\",{className:\"border-x-2 border-y-2 border-black bg-zinc-100 p-4  rounded\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-2xl flex justify-center mb-2\",children:movie.Title}),/*#__PURE__*/_jsx(\"img\",{src:movie.Poster,alt:movie.Title,className:\"flex justify-center  w-full mb-1\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"text-xl\",children:[\"Year: \",movie.Year]}),showListDropdown&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"select\",{className:\"border-zinc-400 border-x-2 border-y-2\",value:selectedListId,onChange:e=>setSelectedListId(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select List\"}),lists.map(list=>/*#__PURE__*/_jsxs(\"option\",{value:list._id,children:[list.name,\" (\",list.isPublic?'Public':'Private',\")\"]},list._id))]}),/*#__PURE__*/_jsx(\"button\",{className:\"bg-green-500 text-white p-2 rounded ml-2\",onClick:()=>handleAddMovie(movie),children:\"Add to List\"})]})]})]},movie.imdbID))})]});};export default Home;","map":{"version":3,"names":["React","useState","useEffect","searchMovies","getLists","addMovieToList","jsx","_jsx","jsxs","_jsxs","Home","movies","setMovies","lists","setLists","selectedListId","setSelectedListId","showListDropdown","setShowListDropdown","searchTerm","setSearchTerm","handleSubmit","e","preventDefault","handleSearch","fetchInitialMovies","response","Search","error","console","fetchLists","data","handleAddMovie","movie","window","alert","className","children","onSubmit","type","placeholder","value","onChange","target","length","map","Title","src","Poster","alt","Year","list","_id","name","isPublic","onClick","imdbID"],"sources":["C:/Users/KRISHNA KUMAR/OneDrive/Desktop/movie-Library/frontend/src/pages/Home.js"],"sourcesContent":["// src/pages/Home.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { searchMovies, getLists, addMovieToList } from '../services/api';\r\n\r\nconst Home = () => {\r\n    const [movies, setMovies] = useState([]);\r\n    const [lists, setLists] = useState([]);\r\n    const [selectedListId, setSelectedListId] = useState('');\r\n    const [showListDropdown, setShowListDropdown] = useState(false);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        handleSearch(searchTerm);\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Function to fetch initial random movies when component mounts\r\n        const fetchInitialMovies = async () => {\r\n            try {\r\n                // Perform a search with a random term to get random movies\r\n                const response = await searchMovies('random');\r\n                setMovies(response.Search);\r\n                setShowListDropdown(true);\r\n            } catch (error) {\r\n                console.error('Failed to fetch initial random movies:', error);\r\n            }\r\n        };\r\n\r\n        // Function to fetch user lists\r\n        const fetchLists = async () => {\r\n            try {\r\n                const data = await getLists();\r\n                setLists(data);\r\n            } catch (error) {\r\n                console.error('Failed to fetch user lists:', error);\r\n            }\r\n        };\r\n\r\n        // Call the functions to fetch initial random movies and user lists\r\n        fetchInitialMovies();\r\n        fetchLists();\r\n    }, []);\r\n\r\n    const handleSearch = async (searchTerm) => {\r\n        try {\r\n            const data = await searchMovies(searchTerm);\r\n            setMovies(data.Search);\r\n            setShowListDropdown(true); // Show the list dropdown after search results are obtained\r\n        } catch (error) {\r\n            console.error('Failed to fetch search results:', error);\r\n            // Handle the error, e.g., display an error message to the user\r\n        }\r\n    };\r\n\r\n    const handleAddMovie = async (movie) => {\r\n        if (!selectedListId) {\r\n            window.alert('Please select a list to add the movie to.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            await addMovieToList(selectedListId, movie);\r\n            window.alert('Movie added to list successfully');\r\n        } catch (error) {\r\n            console.error('Failed to add movie to list:', error);\r\n            window.alert('Failed to add movie to list');\r\n        }\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"p-6\">\r\n            <div className=\"mb-6\">\r\n                <form onSubmit={handleSubmit} className=\"flex items-center justify-center\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Search for Movies or TV shows\"\r\n                        value={searchTerm}\r\n                        onChange={(e) => setSearchTerm(e.target.value)}\r\n                        className=\"bg-white-200 w-1/3 text-black-300 font-mono ring-1 ring-black-10 focus:ring-2 focus:ring-blue-400 outline-none duration-300 placeholder:text-zinc-800 placeholder:opacity-80 rounded-full px-4 py-1 shadow-md focus:shadow-lg focus:shadow-blue-200\"\r\n                    />\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"ml-2 relative py-2 px-5 text-black text-base font-bold rounded-full overflow-hidden bg-zinc-400 transition-all duration-400 ease-in-out shadow-md hover:scale-105 hover:text-white hover:shadow-lg active:scale-90 before:absolute before:top-0 before:-left-full before:w-full before:h-full before:bg-gradient-to-r before:from-blue-500 before:to-blue-300 before:transition-all before:duration-500 before:ease-in-out before:z-[-1] before:rounded-full hover:before:left-0\"\r\n                    >\r\n                        Search\r\n                    </button>\r\n                </form>\r\n            </div>\r\n\r\n            {movies.length > 0 && (\r\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-6 p-6 \">\r\n                    {movies.map((movie) => (\r\n                        <div key={movie.imdbID} className=\"border-x-2 border-y-2 border-black bg-zinc-100 p-4  rounded\">\r\n                            <h3 className=\"text-2xl flex justify-center mb-2\">{movie.Title}</h3>\r\n                            <img src={movie.Poster} alt={movie.Title} className=\"flex justify-center  w-full mb-1\" />\r\n                            <div className=\"flex justify-between items-center\">\r\n                                <span className='text-xl'>Year: {movie.Year}</span>\r\n                                {showListDropdown && (\r\n                                    <div >\r\n                                        <select className='border-zinc-400 border-x-2 border-y-2'\r\n                                            value={selectedListId}\r\n                                            onChange={(e) => setSelectedListId(e.target.value)}\r\n                                        >\r\n                                            <option value=\"\">Select List</option>\r\n                                            {lists.map((list) => (\r\n                                                <option key={list._id} value={list._id}>\r\n                                                    {list.name} ({list.isPublic ? 'Public' : 'Private'})\r\n                                                </option>\r\n                                            ))}\r\n                                        </select>\r\n                                        <button\r\n                                            className=\"bg-green-500 text-white p-2 rounded ml-2\"\r\n                                            onClick={() => handleAddMovie(movie)}\r\n                                        >\r\n                                            Add to List\r\n                                        </button>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n\r\n           \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}