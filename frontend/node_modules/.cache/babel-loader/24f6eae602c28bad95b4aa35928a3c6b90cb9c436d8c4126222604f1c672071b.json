{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KRISHNA KUMAR\\\\OneDrive\\\\Desktop\\\\movie-Library\\\\frontend\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\n// src/pages/Home.js\nimport React, { useState, useEffect } from 'react';\nimport { searchMovies, getLists, addMovieToList } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [lists, setLists] = useState([]);\n  const [selectedListId, setSelectedListId] = useState('');\n  const [showListDropdown, setShowListDropdown] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    handleSearch(searchTerm);\n  };\n  useEffect(() => {\n    // Function to fetch initial random movies when component mounts\n    const fetchInitialMovies = async () => {\n      try {\n        // Perform a search with a random term to get random movies\n        const response = await searchMovies('random');\n        setMovies(response.Search);\n        setShowListDropdown(true);\n      } catch (error) {\n        console.error('Failed to fetch initial random movies:', error);\n      }\n    };\n\n    // Function to fetch user lists\n    const fetchLists = async () => {\n      try {\n        const data = await getLists();\n        setLists(data);\n      } catch (error) {\n        console.error('Failed to fetch user lists:', error);\n      }\n    };\n\n    // Call the functions to fetch initial random movies and user lists\n    fetchInitialMovies();\n    fetchLists();\n  }, []);\n  const handleSearch = async searchTerm => {\n    try {\n      const data = await searchMovies(searchTerm);\n      setMovies(data.Search);\n      setShowListDropdown(true); // Show the list dropdown after search results are obtained\n    } catch (error) {\n      console.error('Failed to fetch search results:', error);\n      // Handle the error, e.g., display an error message to the user\n    }\n  };\n  const handleAddMovie = async movie => {\n    if (!selectedListId) {\n      window.alert('Please select a list to add the movie to.');\n      return;\n    }\n    try {\n      await addMovieToList(selectedListId, movie);\n      window.alert('Movie added to list successfully');\n    } catch (error) {\n      console.error('Failed to add movie to list:', error);\n      window.alert('Failed to add movie to list');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"flex items-center justify-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search for Movies or TV shows\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value),\n          className: \"bg-white-200 w-1/3 text-black-300 font-mono ring-1 ring-black-10 focus:ring-2 focus:ring-blue-400 outline-none duration-300 placeholder:text-zinc-800 placeholder:opacity-80 rounded-full px-4 py-1 shadow-md focus:shadow-lg focus:shadow-blue-200\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"ml-2 relative py-2 px-5 text-black text-base font-bold rounded-full overflow-hidden bg-zinc-400 transition-all duration-400 ease-in-out shadow-md hover:scale-105 hover:text-white hover:shadow-lg active:scale-90 before:absolute before:top-0 before:-left-full before:w-full before:h-full before:bg-gradient-to-r before:from-blue-500 before:to-blue-300 before:transition-all before:duration-500 before:ease-in-out before:z-[-1] before:rounded-full hover:before:left-0\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), movies.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-3 gap-6 mb-6 \",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border-x-2 border-y-2 border-black bg-zinc-100 p-4 rounded\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-2xl mb-2\",\n          children: movie.Title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: movie.Poster,\n          alt: movie.Title,\n          className: \"mb-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Year: \", movie.Year]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 33\n          }, this), showListDropdown && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              value: selectedListId,\n              onChange: e => setSelectedListId(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select List\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 45\n              }, this), lists.map(list => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: list._id,\n                children: [list.name, \" (\", list.isPublic ? 'Public' : 'Private', \")\"]\n              }, list._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 49\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"bg-green-500 text-white p-2 rounded ml-2\",\n              onClick: () => handleAddMovie(movie),\n              children: \"Add to List\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 29\n        }, this)]\n      }, movie.imdbID, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"ZLUbQqtaXORb3saFgPkPe8YdmEI=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","searchMovies","getLists","addMovieToList","jsxDEV","_jsxDEV","Home","_s","movies","setMovies","lists","setLists","selectedListId","setSelectedListId","showListDropdown","setShowListDropdown","searchTerm","setSearchTerm","handleSubmit","e","preventDefault","handleSearch","fetchInitialMovies","response","Search","error","console","fetchLists","data","handleAddMovie","movie","window","alert","className","children","onSubmit","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","length","map","Title","src","Poster","alt","Year","list","_id","name","isPublic","onClick","imdbID","_c","$RefreshReg$"],"sources":["C:/Users/KRISHNA KUMAR/OneDrive/Desktop/movie-Library/frontend/src/pages/Home.js"],"sourcesContent":["// src/pages/Home.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { searchMovies, getLists, addMovieToList } from '../services/api';\r\n\r\nconst Home = () => {\r\n    const [movies, setMovies] = useState([]);\r\n    const [lists, setLists] = useState([]);\r\n    const [selectedListId, setSelectedListId] = useState('');\r\n    const [showListDropdown, setShowListDropdown] = useState(false);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        handleSearch(searchTerm);\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Function to fetch initial random movies when component mounts\r\n        const fetchInitialMovies = async () => {\r\n            try {\r\n                // Perform a search with a random term to get random movies\r\n                const response = await searchMovies('random');\r\n                setMovies(response.Search);\r\n                setShowListDropdown(true);\r\n            } catch (error) {\r\n                console.error('Failed to fetch initial random movies:', error);\r\n            }\r\n        };\r\n\r\n        // Function to fetch user lists\r\n        const fetchLists = async () => {\r\n            try {\r\n                const data = await getLists();\r\n                setLists(data);\r\n            } catch (error) {\r\n                console.error('Failed to fetch user lists:', error);\r\n            }\r\n        };\r\n\r\n        // Call the functions to fetch initial random movies and user lists\r\n        fetchInitialMovies();\r\n        fetchLists();\r\n    }, []);\r\n\r\n    const handleSearch = async (searchTerm) => {\r\n        try {\r\n            const data = await searchMovies(searchTerm);\r\n            setMovies(data.Search);\r\n            setShowListDropdown(true); // Show the list dropdown after search results are obtained\r\n        } catch (error) {\r\n            console.error('Failed to fetch search results:', error);\r\n            // Handle the error, e.g., display an error message to the user\r\n        }\r\n    };\r\n\r\n    const handleAddMovie = async (movie) => {\r\n        if (!selectedListId) {\r\n            window.alert('Please select a list to add the movie to.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            await addMovieToList(selectedListId, movie);\r\n            window.alert('Movie added to list successfully');\r\n        } catch (error) {\r\n            console.error('Failed to add movie to list:', error);\r\n            window.alert('Failed to add movie to list');\r\n        }\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"p-6\">\r\n            <div className=\"mb-6\">\r\n                <form onSubmit={handleSubmit} className=\"flex items-center justify-center\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Search for Movies or TV shows\"\r\n                        value={searchTerm}\r\n                        onChange={(e) => setSearchTerm(e.target.value)}\r\n                        className=\"bg-white-200 w-1/3 text-black-300 font-mono ring-1 ring-black-10 focus:ring-2 focus:ring-blue-400 outline-none duration-300 placeholder:text-zinc-800 placeholder:opacity-80 rounded-full px-4 py-1 shadow-md focus:shadow-lg focus:shadow-blue-200\"\r\n                    />\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"ml-2 relative py-2 px-5 text-black text-base font-bold rounded-full overflow-hidden bg-zinc-400 transition-all duration-400 ease-in-out shadow-md hover:scale-105 hover:text-white hover:shadow-lg active:scale-90 before:absolute before:top-0 before:-left-full before:w-full before:h-full before:bg-gradient-to-r before:from-blue-500 before:to-blue-300 before:transition-all before:duration-500 before:ease-in-out before:z-[-1] before:rounded-full hover:before:left-0\"\r\n                    >\r\n                        Search\r\n                    </button>\r\n                </form>\r\n            </div>\r\n\r\n            {movies.length > 0 && (\r\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-6 \">\r\n                    {movies.map((movie) => (\r\n                        <div key={movie.imdbID} className=\"border-x-2 border-y-2 border-black bg-zinc-100 p-4 rounded\">\r\n                            <h3 className=\"text-2xl mb-2\">{movie.Title}</h3>\r\n                            <img src={movie.Poster} alt={movie.Title} className=\"mb-2\" />\r\n                            <div className=\"flex justify-between items-center\">\r\n                                <span>Year: {movie.Year}</span>\r\n                                {showListDropdown && (\r\n                                    <div>\r\n                                        <select\r\n                                            value={selectedListId}\r\n                                            onChange={(e) => setSelectedListId(e.target.value)}\r\n                                        >\r\n                                            <option value=\"\">Select List</option>\r\n                                            {lists.map((list) => (\r\n                                                <option key={list._id} value={list._id}>\r\n                                                    {list.name} ({list.isPublic ? 'Public' : 'Private'})\r\n                                                </option>\r\n                                            ))}\r\n                                        </select>\r\n                                        <button\r\n                                            className=\"bg-green-500 text-white p-2 rounded ml-2\"\r\n                                            onClick={() => handleAddMovie(movie)}\r\n                                        >\r\n                                            Add to List\r\n                                        </button>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n\r\n           \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}