{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api';\nexport const registerUser = async userData => {\n  try {\n    const response = await axios.post(`${API_URL}/users/register`, userData);\n    return response.data;\n  } catch (error) {\n    if (error.response && error.response.data) {\n      // Throw the error message returned by the API\n      throw new Error(error.response.data.message);\n    } else {\n      // Throw a generic error message\n      throw new Error('Registration failed. Please try again.');\n    }\n  }\n};\nexport const loginUser = async userData => {\n  try {\n    const response = await axios.post(`${API_URL}/users/login`, userData);\n    return response.data;\n  } catch (error) {\n    if (error.response && error.response.data) {\n      // Throw the error message returned by the API\n      throw new Error(error.response.data.message || 'Login failed');\n    } else {\n      // Throw a generic error message\n      throw new Error('Login failed. Please try again.');\n    }\n  }\n};\nexport const searchMovies = async title => {\n  const response = await axios.get(`${API_URL}/movies/search?title=${title}`, {\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem('token')}`\n    }\n  });\n  return response.data;\n};\nexport const createList = async listData => {\n  try {\n    const response = await axios.post(`${API_URL}/lists`, {\n      name: listData.name,\n      isPublic: listData.isPublic // Include the isPublic property\n    }, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Failed to create list:', error);\n    throw error;\n  }\n};\nexport const getLists = async () => {\n  const response = await axios.get(`${API_URL}/lists`, {\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem('token')}`\n    }\n  });\n  return response.data;\n};\nexport const addMovieToList = async (listId, movie) => {\n  const response = await axios.post(`${API_URL}/lists/${listId}`, {\n    movie\n  }, {\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem('token')}`\n    }\n  });\n  return response.data;\n};\nexport const deleteMovieFromList = async (listId, movieId) => {\n  const response = await axios.delete(`${API_URL}/lists/${listId}/movies/${movieId}`, {\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem('token')}`\n    }\n  });\n  return response.data;\n};\nexport const deleteList = async listId => {\n  const response = await axios.delete(`${API_URL}/lists/${listId}`);\n  return response.data;\n};","map":{"version":3,"names":["axios","API_URL","registerUser","userData","response","post","data","error","Error","message","loginUser","searchMovies","title","get","headers","Authorization","localStorage","getItem","createList","listData","name","isPublic","console","getLists","addMovieToList","listId","movie","deleteMovieFromList","movieId","delete","deleteList"],"sources":["C:/Users/KRISHNA KUMAR/OneDrive/Desktop/movie-Library/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api';\r\n\r\nexport const registerUser = async (userData) => {\r\n    try {\r\n        const response = await axios.post(`${API_URL}/users/register`, userData);\r\n        return response.data;\r\n    } catch (error) {\r\n        if (error.response && error.response.data) {\r\n            // Throw the error message returned by the API\r\n            throw new Error(error.response.data.message);\r\n        } else {\r\n            // Throw a generic error message\r\n            throw new Error('Registration failed. Please try again.');\r\n        }\r\n    }\r\n};\r\n\r\nexport const loginUser = async (userData) => {\r\n    try {\r\n        const response = await axios.post(`${API_URL}/users/login`, userData);\r\n        return response.data;\r\n    } catch (error) {\r\n        if (error.response && error.response.data) {\r\n            // Throw the error message returned by the API\r\n            throw new Error(error.response.data.message || 'Login failed');\r\n        } else {\r\n            // Throw a generic error message\r\n            throw new Error('Login failed. Please try again.');\r\n        }\r\n    }\r\n};\r\n\r\nexport const searchMovies = async (title) => {\r\n    const response = await axios.get(`${API_URL}/movies/search?title=${title}`, {\r\n        headers: {\r\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n    });\r\n    return response.data;\r\n};\r\n\r\nexport const createList = async (listData) => {\r\n    try {\r\n        const response = await axios.post(`${API_URL}/lists`, {\r\n            name: listData.name,\r\n            isPublic: listData.isPublic, // Include the isPublic property\r\n        }, {\r\n            headers: {\r\n                Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n            },\r\n        });\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Failed to create list:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const getLists = async () => {\r\n    const response = await axios.get(`${API_URL}/lists`, {\r\n        headers: {\r\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n    });\r\n    return response.data;\r\n};\r\n\r\nexport const addMovieToList = async (listId, movie) => {\r\n    const response = await axios.post(`${API_URL}/lists/${listId}`, { movie }, {\r\n        headers: {\r\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n    });\r\n    return response.data;\r\n};\r\n\r\nexport const deleteMovieFromList = async (listId, movieId) => {\r\n    const response = await axios.delete(`${API_URL}/lists/${listId}/movies/${movieId}`, {\r\n        headers: {\r\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n        \r\n    });\r\n    return response.data;\r\n};\r\n\r\nexport const deleteList = async (listId) => {\r\n    const response = await axios.delete(`${API_URL}/lists/${listId}`);\r\n    return response.data;\r\n};\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}